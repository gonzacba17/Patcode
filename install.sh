#!/bin/bash
set -e

echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë   PatCode - Instalaci√≥n R√°pida        ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""

# Detectar sistema operativo
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    OS="linux"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    OS="macos"
elif [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "cygwin" ]]; then
    OS="windows"
else
    echo "‚ùå Sistema operativo no soportado: $OSTYPE"
    exit 1
fi

echo "üñ•Ô∏è  Sistema detectado: $OS"
echo ""

# Funci√≥n para verificar comando
check_command() {
    if command -v $1 &> /dev/null; then
        echo "‚úÖ $1 instalado"
        return 0
    else
        echo "‚ùå $1 no encontrado"
        return 1
    fi
}

# Verificar dependencias
echo "üîç Verificando dependencias..."
echo ""

PYTHON_OK=false
DOCKER_OK=false

if check_command python3 || check_command python; then
    PYTHON_OK=true
fi

if check_command docker; then
    DOCKER_OK=true
fi

echo ""

# Opciones de instalaci√≥n
echo "Selecciona m√©todo de instalaci√≥n:"
echo ""
echo "1) üêç Instalaci√≥n local (Python)"
echo "2) üê≥ Instalaci√≥n con Docker"
echo "3) ‚ùå Salir"
echo ""

read -p "Opci√≥n (1-3): " choice

case $choice in
    1)
        echo ""
        echo "üì¶ Instalaci√≥n local"
        echo "===================="
        echo ""
        
        if [ "$PYTHON_OK" = false ]; then
            echo "‚ùå Python no est√° instalado"
            echo "Por favor instala Python 3.9+ desde https://python.org"
            exit 1
        fi
        
        # Crear entorno virtual
        echo "üì¶ Creando entorno virtual..."
        python3 -m venv venv || python -m venv venv
        
        # Activar entorno
        if [ "$OS" = "windows" ]; then
            source venv/Scripts/activate
        else
            source venv/bin/activate
        fi
        
        # Instalar dependencias
        echo "üì¶ Instalando dependencias..."
        pip install -r requirements.txt
        
        # Configurar
        echo "‚öôÔ∏è  Configurando..."
        if [ ! -f .env ]; then
            cp config/.env.example .env 2>/dev/null || echo "Warning: .env.example not found"
        fi
        
        mkdir -p agents/memory logs agents/cache
        
        echo ""
        echo "‚úÖ Instalaci√≥n completada!"
        echo ""
        echo "Para ejecutar PatCode:"
        if [ "$OS" = "windows" ]; then
            echo "  venv\\Scripts\\activate"
        else
            echo "  source venv/bin/activate"
        fi
        echo "  python main.py"
        ;;
    
    2)
        echo ""
        echo "üê≥ Instalaci√≥n con Docker"
        echo "========================="
        echo ""
        
        if [ "$DOCKER_OK" = false ]; then
            echo "‚ùå Docker no est√° instalado"
            echo "Por favor instala Docker desde https://docker.com"
            exit 1
        fi
        
        # Ejecutar setup script
        chmod +x scripts/setup.sh
        ./scripts/setup.sh
        
        echo ""
        echo "‚úÖ Instalaci√≥n completada!"
        echo ""
        echo "Para ejecutar PatCode:"
        echo "  docker-compose up -d patcode"
        echo "  docker-compose exec patcode python main.py"
        ;;
    
    3)
        echo "üëã Saliendo..."
        exit 0
        ;;
    
    *)
        echo "‚ùå Opci√≥n inv√°lida"
        exit 1
        ;;
esac
